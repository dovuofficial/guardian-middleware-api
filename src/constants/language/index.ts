import { Role } from 'src/config'

const language = {
	middleware: {
		ensureRole: {
			[Role.STANDARD_REGISTRY]:
				'Only a "STANDARD_REGISTRY" policy owner may approve an application',
			[Role.VERIFIER]:
				'Only a user with the role "VERIFIER" make approve an MRV block',
			[Role.REGISTRANT]:
				'Only a user with the role "REGISTRANT" may submit this document',
		},
		withAuthenticationResponse: {
			noAccessToken:
				'Please set a valid Bearer JWT in your "Authorization" header. A new JWT can be generated by logging in.',
			invalidAuthType: (type: string) =>
				`The Authorization type should be Bearer, not ${type}.`,
		},
		ensureEncryptionKey: {
			noEncryptionKey:
				'Unable to process encryption action, 32 character length "ENCRYPTION_KEY" not set in config',
		},
		onlyPostResponse: {
			notAllowed: (method: string) =>
				`Method ${method} is not allowed on this route`,
		},
		validate: {
			message: 'Validation errors',
		},
	},

	// Requests
	statusRequest: {
		message: 'Your environment status for your client',
		meta_hint:
			'Hide this status endpoint by setting "HIDE_STATUS=TRUE" in your environment',
	},
}

export default language
