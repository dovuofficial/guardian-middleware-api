import { Role } from 'src/config'
import StatusCode from '../status'

const language = {
	middleware: {
		ensureRole: {
			policyRequired:
				'A role can only be enforced when connected to a policy',
			policyDoesNotExist: 'A policy cannot be found with that id',
			[Role.STANDARD_REGISTRY]:
				'Only a "STANDARD_REGISTRY" policy owner may approve an application',
			[Role.VERIFIER]:
				'Only a user with the role "VERIFIER" make approve an MRV block',
			[Role.REGISTRANT]:
				'Only a user with the role "REGISTRANT" may submit this document',
		},
		withAuthenticationResponse: {
			noAccessToken:
				'Please set a valid Bearer JWT in your "Authorization" header. A new JWT can be generated by logging in.',
			invalidAuthType: (type: string) =>
				`The Authorization type should be Bearer, not ${type}.`,
		},
		ensureEncryptionKey: {
			noEncryptionKey:
				'Unable to process encryption action, 32 character length "ENCRYPTION_KEY" not set in config',
		},
		onlyPostResponse: {
			notAllowed: (method: string) =>
				`Method ${method} is not allowed on this route`,
		},
		ensureMrv: {
			unknownMrv: 'No MRV found with that id',
		},
		validate: {
			message: 'Validation errors',
		},
		guardian: {
			serverError:
				'üí• Guardian API server error‚Ä¶ your guess is as good as ours‚Ä¶ ü§∑‚Äç‚ôÇÔ∏è',
		},
	},

	// Standard API error status code messages
	errorCode: {
		[StatusCode.BAD_REQUEST]: 'Bad Request',
		[StatusCode.UNAUTHORIZED]: 'Unauthorized',
		[StatusCode.NOT_FOUND]: 'Not Found',
		[StatusCode.METHOD_NOT_ALLOWED]: 'Method Not Allowed',
		[StatusCode.UNPROCESSIBLE_ENTITY]: 'Unprocessable Entity',
		[StatusCode.INTERNAL_SERVER_ERROR]: 'Internal Server Error',
	},

	// Requests
	statusRequest: {
		message: 'Your environment status for your client',
		meta_hint:
			'Hide this status endpoint by setting "HIDE_STATUS=TRUE" in your environment',
	},
}

export default language
