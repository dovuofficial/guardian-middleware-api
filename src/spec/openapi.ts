/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/accounts': {
		post: {
			responses: {
				/** OK */
				200: {
					headers: {
						'Content-Type'?: string
					}
					content: {
						'application/json': components['schemas']['Account']
					}
				}
				422: components['responses']['422']
			}
			requestBody: {
				content: {
					'application/json': components['schemas']['Credentials']
				}
			}
		}
	}
	'/accounts/login': {
		post: operations['login']
	}
	'/policies/{policyId}/role': {
		post: {
			parameters: {
				path: {
					policyId: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				422: components['responses']['422']
			}
		}
	}
	'/policies/{policyId}/register': {
		post: {
			parameters: {
				path: {
					policyId: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				422: components['responses']['422']
			}
			requestBody: {
				content: {
					'application/json': components['schemas']['ProjectRegistration']
				}
			}
		}
	}
	'/policies/{policyId}/project': {
		post: {
			parameters: {
				path: {
					policyId: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				401: components['responses']['401']
				422: components['responses']['422']
			}
			requestBody: {
				content: {
					'application/json': components['schemas']['EcologicalProject']
				}
			}
		}
	}
	'/policies/{policyId}/mrv/{mrv_type}': {
		post: {
			parameters: {
				path: {
					policyId: string
					mrv_type: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				401: components['responses']['401']
				422: components['responses']['422']
			}
			requestBody: {
				content: {
					'application/json': components['schemas']['MeasurementReportingVerification']
				}
			}
		}
	}
	'/policies/{policyId}/approve/application/{did}': {
		put: {
			parameters: {
				path: {
					policyId: string
					MrvType: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				401: components['responses']['401']
				404: components['responses']['404']
			}
		}
	}
	'/policies/{policyId}/approve/project/{did}': {
		put: {
			parameters: {
				path: {
					policyId: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				401: components['responses']['401']
				404: components['responses']['404']
			}
		}
	}
	'/policies/{policyId}/approve/mrv/{mrvType}': {
		put: {
			parameters: {
				path: {
					policyId: string
					MrvType: string
				}
			}
			responses: {
				/** OK */
				200: {
					headers: {
						Date?: string
						Connection?: string
						'Keep-Alive'?: string
						'Transfer-Encoding'?: string
					}
					content: {
						'text/plain': string
					}
				}
				401: components['responses']['401']
				404: components['responses']['404']
			}
		}
	}
}

export interface components {
	schemas: {
		/**
		 * @example {
		 *   "username": "justyn",
		 *   "password": "secret"
		 * }
		 */
		Credentials: {
			username: string
			password: string
		}
		/**
		 * @example {
		 *   "data": {
		 *     "username": "justyn",
		 *     "did": "did:hedera:testnet:Evkgr8TnmSHxNEWXoShEEcQmbyrMdQHN7oz6Y3ehXEDZ;hedera:testnet:tid=0.0.47741853",
		 *     "role": "USER",
		 *     "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imp1c3R5bjExIiwiZGlkIjoiZGlkOmhlZGVyYTp0ZXN0bmV0OkV2a2dyOFRubVNIeE5FV1hvU2hFRWNRbWJ5ck1kUUhON296NlkzZWhYRURaO2hlZGVyYTp0ZXN0bmV0OnRpZD0wLjAuNDc3NDE4NTMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY1ODc2NDcyNX0.osyrOl7zq8UVnH9Xyvdxca5UrfuLT2OwBvDI3MPz4HA"
		 *   }
		 * }
		 */
		Account: {
			username?: string
			did?: string
			role?: string
			accessToken?: string
		}
		/**
		 * @example {
		 *   "data": {
		 *     "did": "did:hedera:testnet:Evkgr8TnmSHxNEWXoShEEcQmbyrMdQHN7oz6Y3ehXEDZ;hedera:testnet:tid=0.0.47741853"
		 *   }
		 * }
		 */
		UserDid: {
			did?: string
		}
		ErrorResponse: {
			error?: {
				message?: string
			}
		}
		UnprocessableErrorResponse: {
			error?: {
				message?: string
				errors?: string[]
			}
		}
		/**
		 * @example {
		 *   "field0": "uuid",
		 *   "field1": "Illum commodi quidem dolorem voluptatibus.",
		 *   "field2": "A at mollitia corporis molestiae ut debitis.",
		 *   "field3": "owner",
		 *   "field4": {
		 *     "field0": "dovu.market",
		 *     "field1": "England",
		 *     "field2": "Micro"
		 *   },
		 *   "field5": {
		 *     "field0": "uuid",
		 *     "field1": "GeoJSON Location",
		 *     "field2": "Removal",
		 *     "field3": "N/A",
		 *     "field4": "N/A",
		 *     "field5": "N/A",
		 *     "field6": "N/A",
		 *     "field7": "N/A",
		 *     "field8": "Developer of project",
		 *     "field9": "Sponsor (optional)",
		 *     "field10": "Claim Tokens (number)"
		 *   }
		 * }
		 */
		EcologicalProject: {
			/** @description Unique Identifier of the project */
			field0?: string
			/** @description Name of the project */
			field1?: string
			/** @description Optional description of the project */
			field2?: string
			/** @description Owners of the project, can be account_id, did, or something non-PII */
			field3?: string
			/** @description Ecological Project Information */
			field4?: {
				/** @description Link to Project Data: A verified link to more project data like marketing materials or a website */
				field0?: string
				/** @description Country: The host country for the project */
				field1?: string
				/** @description Project Scale: One from the list of - Micro, Small, Medium, or Large */
				field2?: string
			}
			/** @description Ecological Project Information */
			field5?: {
				/** @description Unique identifier (“Id”): An identifier that is issued and is independent of the project. The Id is used to establish a compound identifier linking the MBP with its host EP. */
				field0?: string
				/** @description Geographic Location (GeoJSON for Projects, Basic GNS/GPS for Programs) */
				field1?: string
				/** @description Targeted Benefit Type */
				field2?: string
				/** @description Carbon (Reduction/Removal + Natural/Technology) */
				field3?: string
				/** @description Water */
				field4?: string
				/** @description Nitrogen */
				field5?: string
				/** @description Phosphorus */
				field6?: string
				/** @description Sediment */
				field7?: string
				/** @description Developer(s) */
				field8?: string
				/** @description Sponsor(s) */
				field9?: string
				/** @description Claim Tokens */
				field10?: string
			}
		}
		/**
		 * @example {
		 *   "field0": "Blanditiis consequuntur repellat voluptatem quod et aperiam voluptas.",
		 *   "field1": "A at mollitia corporis molestiae ut debitis.",
		 *   "field2": 57779,
		 *   "field3": "Illum commodi quidem dolorem voluptatibus.",
		 *   "field4": "Porro qui error earum quia iure praesentium molestiae.",
		 *   "field5": "Aut necessitatibus voluptatem quae nemo reiciendis officia et aperiam quia.",
		 *   "field6": "Quia maiores vel et reprehenderit eius fugiat quae nihil.",
		 *   "field7": "Aliquid et sint sint assumenda nostrum eum.",
		 *   "field8": "Quia explicabo dolorum minima perspiciatis suscipit odit explicabo aut amet."
		 * }
		 */
		ProjectRegistration: {
			/** @description What is the name of your farm? */
			field0?: string
			/** @description Where is your farm located? */
			field1?: string
			/** @description What is the size of your farm/land in hectares? */
			field2?: number
			/** @description What type of soil does your farm/land has? In addition, please explain what types of crops do you grow in your property? */
			field3?: string
			/** @description Have you got any animals on the farm? If yes, please provide us with further explanation of the types of animals and how they interact with your property? */
			field4?: string
			/** @description What are your current farming practices? */
			field5?: string
			/** @description How do you irrigate your property? */
			field6?: string
			/** @description Do you fertilise the soil? If yes, please explain the process, what types of fertilisers are you using and how often? */
			field7?: string
			/** @description Do you use heavy machinery (tractors, combine, etc.) on the farm? If yes, please provide further details. */
			field8?: string
		}
		MeasurementReportingVerification:
			| {
					field0: number
					field1: number
					field2: number
					field3: number
					field4: number
					field5: number
					field6: number
					field7: number
					field8: number
					field9: number
					field10: number
					field11: number
					field12: number
					field13: number
					field14: number
			  }
			| {
					field0: string
					field1: number
					field2: string
					field3: number
					field4: number
			  }
	}
	responses: {
		/** Bad request */
		400: {
			content: {
				'application/json': components['schemas']['ErrorResponse']
			}
		}
		/** Unauthorized */
		401: {
			content: {
				'application/json': components['schemas']['ErrorResponse']
			}
		}
		/** Not found */
		404: {
			content: {
				'application/json': components['schemas']['ErrorResponse']
			}
		}
		/** Unprocessable entity */
		422: {
			content: {
				'application/json': components['schemas']['UnprocessableErrorResponse']
			}
		}
	}
}

export interface operations {
	login: {
		responses: {
			/** OK */
			200: {
				headers: {
					'Content-Type'?: string
				}
				content: {
					'application/json': components['schemas']['Account']
				}
			}
			422: components['responses']['422']
		}
		requestBody: {
			content: {
				'application/json': components['schemas']['Credentials']
			}
		}
	}
}

export interface external {}
