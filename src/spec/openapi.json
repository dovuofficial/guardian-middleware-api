{
	"openapi": "3.0.2",
	"info": {
		"title": "DOVU Digital Credit Middleware: Simplified Ecological Asset Integration",
		"description": "This API serves as a pivotal middleware platform, interfacing seamlessly with the Hedera Hashgraph Guardian to empower the efficient management and standardization of ecological credit lifecycles. By converging the technical capabilities of the Guardian with DOVU's ecological digital credit standards, we offer an expedited, cost-effective route to green asset development. Sidestepping the high investment typically required for custom solutions, DOVU's operating system ensures rapid deployment and adherence to consistent standards, freeing users to concentrate on environmental impact without infrastructural overhead. Streamlining the complexities of ecological credit transactions, DOVU's middleware API is the key to unlocking a sustainable future with ease and precision.",
		"version": "0.1.0",
		"contact": {
			"name": "DOVU Support",
			"url": "https://www.dovu.earth",
			"email": "support@dovu.earth"
		}
	},
	"servers": [
		{
			"url": "http://localhost:3001/api",
			"description": "Localhost environment server"
		}
	],
	"components": {
		"responses": {
			"400": {
				"description": "Bad request",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						}
					}
				}
			},
			"401": {
				"description": "Unauthorized",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						}
					}
				}
			},
			"404": {
				"description": "Not found",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						}
					}
				}
			},
			"422": {
				"description": "Unprocessable entity",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ErrorResponse"
						}
					}
				}
			}
		},
		"schemas": {
			"Credentials": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": ["username", "password"],
				"example": {
					"username": "justyn",
					"password": "secret"
				}
			},
			"Account": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"did": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"accessToken": {
						"type": "string"
					}
				},
				"example": {
					"data": {
						"username": "justyn",
						"did": "did:hedera:testnet:Evkgr8TnmSHxNEWXoShEEcQmbyrMdQHN7oz6Y3ehXEDZ;hedera:testnet:tid=0.0.47741853",
						"role": "USER",
						"accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imp1c3R5bjExIiwiZGlkIjoiZGlkOmhlZGVyYTp0ZXN0bmV0OkV2a2dyOFRubVNIeE5FV1hvU2hFRWNRbWJ5ck1kUUhON296NlkzZWhYRURaO2hlZGVyYTp0ZXN0bmV0OnRpZD0wLjAuNDc3NDE4NTMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTY1ODc2NDcyNX0.osyrOl7zq8UVnH9Xyvdxca5UrfuLT2OwBvDI3MPz4HA"
					}
				}
			},
			"UserDid": {
				"type": "object",
				"properties": {
					"did": {
						"type": "string"
					}
				},
				"example": {
					"data": {
						"did": "did:hedera:testnet:Evkgr8TnmSHxNEWXoShEEcQmbyrMdQHN7oz6Y3ehXEDZ;hedera:testnet:tid=0.0.47741853"
					}
				}
			},
			"ErrorResponse": {
				"type": "object",
				"properties": {
					"error": {
						"type": "object",
						"properties": {
							"message": {
								"type": "string"
							},
							"statusCode": {
								"type": "number"
							},
							"timestamp": {
								"type": "string"
							},
							"path": {
								"type": "string"
							},
							"errors": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"required": [
							"message",
							"statusCode",
							"timestamp",
							"path"
						]
					}
				}
			},
			"UnprocessableErrorResponse": {
				"type": "object",
				"properties": {
					"error": {
						"type": "object",
						"properties": {
							"message": {
								"type": "string"
							},
							"errors": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"EcologicalProject": {
				"type": "object",
				"properties": {
					"field0": {
						"type": "string",
						"description": "Unique Identifier of the project"
					},
					"field1": {
						"type": "string",
						"description": "Name of the project"
					},
					"field2": {
						"type": "string",
						"description": "Optional description of the project"
					},
					"field3": {
						"type": "string",
						"description": "Owners of the project, can be account_id, did, or something non-PII"
					},

					"field4": {
						"type": "string",
						"description": "Ecological Project Info - Link to Project Data: A verified link to more project data like marketing materials or a website"
					},
					"field5": {
						"type": "string",
						"description": "Ecological Project Info - Country: The host country for the project"
					},
					"field6": {
						"type": "string",
						"description": "Ecological Project Info - Project Scale: One from the list of - Micro, Small, Medium, or Large"
					},
					"field7": {
						"type": "string",
						"description": "Modular Benefit Project - Unique identifier (“Id”): An identifier that is issued and is independent of the project. The Id is used to establish a compound identifier linking the MBP with its host EP."
					},
					"field8": {
						"type": "string",
						"description": "Modular Benefit Project - Geographic Location (GeoJSON for Projects, Basic GNS/GPS for Programs)"
					},
					"field9": {
						"type": "string",
						"description": "Modular Benefit Project - Targeted Benefit Type"
					},
					"field10": {
						"type": "string",
						"description": "Modular Benefit Project - Developer(s)"
					},
					"field11": {
						"type": "string",
						"description": "Modular Benefit Project - Sponsor(s)"
					},
					"field12": {
						"type": "string",
						"description": "Modular Benefit Project - Claim Tokens"
					}
				},
				"example": {
					"field0": "1234",
					"field1": "Matt's Farm",
					"field2": "This is a description about Matt's farm",
					"field3": "Matt Smithies",
					"field4": "Ecological Project Info - Link to Project Data",
					"field5": "Ecological Project Info - Country: The host country for the project",
					"field6": "Ecological Project Info - Project Scale: One from the list of - Micro, Small, Medium, or Large",
					"field7": "Modular Benefit Project - Unique identifier ",
					"field8": "Modular Benefit Project - Geographic Location",
					"field9": "Modular Benefit Project - Targeted Benefit Type",
					"field10": "Modular Benefit Project - Developer(s)",
					"field11": "Modular Benefit Project - Sponsor(s)",
					"field12": "Modular Benefit Project - Claim Tokens"
				}
			},
			"ProjectRegistration": {
				"type": "object",
				"properties": {
					"field0": {
						"type": "string",
						"description": "What is the name of your farm?"
					},
					"field1": {
						"type": "string",
						"description": "Where is your farm located?"
					},
					"field2": {
						"type": "number",
						"description": "What is the size of your farm/land in hectares?"
					},
					"field3": {
						"type": "string",
						"description": "What type of soil does your farm/land has? In addition, please explain what types of crops do you grow in your property?"
					},
					"field4": {
						"type": "string",
						"description": "Have you got any animals on the farm? If yes, please provide us with further explanation of the types of animals and how they interact with your property?"
					},
					"field5": {
						"type": "string",
						"description": "What are your current farming practices?"
					},
					"field6": {
						"type": "string",
						"description": "How do you irrigate your property?"
					},
					"field7": {
						"type": "string",
						"description": "Do you fertilise the soil? If yes, please explain the process, what types of fertilisers are you using and how often?"
					},
					"field8": {
						"type": "string",
						"description": "Do you use heavy machinery (tractors, combine, etc.) on the farm? If yes, please provide further details."
					}
				},
				"example": {
					"field0": "Blanditiis consequuntur repellat voluptatem quod et aperiam voluptas.",
					"field1": "A at mollitia corporis molestiae ut debitis.",
					"field2": 57779,
					"field3": "Illum commodi quidem dolorem voluptatibus.",
					"field4": "Porro qui error earum quia iure praesentium molestiae.",
					"field5": "Aut necessitatibus voluptatem quae nemo reiciendis officia et aperiam quia.",
					"field6": "Quia maiores vel et reprehenderit eius fugiat quae nihil.",
					"field7": "Aliquid et sint sint assumenda nostrum eum.",
					"field8": "Quia explicabo dolorum minima perspiciatis suscipit odit explicabo aut amet."
				}
			},
			"MeasurementReportingVerification": {
				"type": "object",
				"oneOf": [
					{
						"properties": {
							"field0": {
								"type": "number",
								"description": "Total CO2e emissions from farming"
							},
							"field1": {
								"type": "number",
								"description": "CARBON SEQUESTRATION (soil) - Total CO2e from soil carbon sequestration"
							},
							"field2": {
								"type": "number",
								"description": "Total CO2e emissions from farming (inc. Soil Carbon) "
							},
							"field3": {
								"type": "number",
								"description": "(Mintable KGs) Net emissions from land use (inc SoilCarbon) "
							},
							"field4": {
								"type": "number",
								"description": "Emissions per hectare (inc. Soil Carbon)"
							},
							"field5": {
								"type": "number",
								"description": "Farm and enterprise output - KG"
							}
						},
						"required": [
							"field0",
							"field1",
							"field2",
							"field3",
							"field4",
							"field5"
						]
					},
					{
						"properties": {
							"field0": {
								"type": "string",
								"description": "Crop type"
							},
							"field1": {
								"type": "number",
								"description": "Year / Vintage"
							},
							"field2": {
								"type": "string",
								"description": "Farm-gate amount (crop output weight)"
							},
							"field3": {
								"type": "number",
								"description": "Emission yield per Ha"
							},
							"field4": {
								"type": "number",
								"description": "Negative GHG KG Emissions (Mintable KG)"
							}
						},
						"required": [
							"field0",
							"field1",
							"field2",
							"field3",
							"field4"
						]
					},
					{
						"properties": {
							"field0": {
								"type": "string",
								"description": "Documentation Name"
							},
							"field1": {
								"type": "string",
								"description": "Documentation Description"
							},
							"field2": {
								"type": "string",
								"description": "Documentation Link"
							},
							"field3": {
								"type": "string",
								"description": "Carbon Mintable (Mintable KGs)"
							},
							"field4": {
								"type": "string",
								"description": "Documentation CID (IPFS Provenance)"
							}
						},
						"required": [
							"field0",
							"field1",
							"field2",
							"field3",
							"field4"
						]
					}
				]
			},
			"TrustChains": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/TrustChainDocument"
				}
			},
			"TrustChainDocument": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"hash": {
						"type": "string"
					},
					"tokenId": {
						"type": "string"
					},
					"mintDate": {
						"type": "string",
						"format": "date-time"
					},
					"mintAmount": {
						"type": "string"
					},
					"topicId": {
						"type": "string"
					},
					"issuer": {
						"$ref": "#/components/schemas/Issuer"
					},
					"createDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"messageId": {
						"type": "string"
					},
					"proof": {
						"$ref": "#/components/schemas/Proof"
					},
					"policy": {
						"$ref": "#/components/schemas/Policy"
					},
					"trustChain": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TrustChain"
						}
					}
				},
				"required": [
					"createDate",
					"hash",
					"issuer",
					"messageId",
					"mintDate",
					"mintAmount",
					"policy",
					"proof",
					"tokenId",
					"topicId",
					"trustChain",
					"updateDate"
				],
				"title": "Trust Chain Document"
			},
			"Issuer": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"did": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				},
				"required": ["did", "username"],
				"title": "Issuer"
			},
			"Policy": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"issuer": {
						"$ref": "#/components/schemas/Issuer"
					},
					"createDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"createDate",
					"description",
					"id",
					"issuer",
					"name",
					"updateDate",
					"version"
				],
				"title": "Policy"
			},
			"Proof": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"type": {
						"type": "string"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"verificationMethod": {
						"type": "string"
					},
					"proofPurpose": {
						"type": "string"
					},
					"challenge": {
						"type": "string",
						"format": "integer"
					},
					"jws": {
						"type": "string"
					}
				},
				"required": [
					"created",
					"jws",
					"proofPurpose",
					"type",
					"verificationMethod"
				],
				"title": "Proof"
			},
			"TrustChain": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"visible": {
						"type": "boolean"
					},
					"issuer": {
						"$ref": "#/components/schemas/Issuer"
					},
					"messageId": {
						"anyOf": [
							{
								"type": "null"
							},
							{
								"type": "string"
							}
						]
					},
					"issuanceDate": {
						"type": "string",
						"format": "date-time"
					},
					"createDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"proof": {
						"$ref": "#/components/schemas/Proof"
					},
					"type": {
						"type": "string"
					}
				},
				"required": [
					"createDate",
					"description",
					"issuanceDate",
					"issuer",
					"messageId",
					"proof",
					"title",
					"updateDate",
					"visible",
					"type"
				],
				"title": "TrustChain"
			}
		},
		"securitySchemes": {
			"AccessToken": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "The JWT of a logged in account"
			}
		}
	},
	"security": [
		{
			"AccessToken": []
		}
	],
	"tags": [
		{
			"name": "accounts",
			"description": "This section of the API deals with account management. It allows users to create accounts, authenticate, and manage their details. Endpoints under this tag are essential for ensuring that only authorized users can access the system and perform actions according to their roles."
		},
		{
			"name": "policies",
			"description": "This tag addresses the management of policies related to ecological and carbon credit lifecycle. It includes creating policies, assigning roles, and managing submissions for sites and claims. Each submission must reference back to the originating document or entity, ensuring a traceable and verifiable workflow. This reference mechanism is facilitated through the state API endpoints, which allow users to query and manage the status of different components within a policy's lifecycle. These endpoints are key to maintaining a coherent and auditable trail from project inception through to credit issuance."
		},
		{
			"name": "approval",
			"description": "The approval endpoints facilitate the progression of entities through their lifecycle within a policy's scope. These endpoints are pivotal for transitioning projects, sites, and claims to their subsequent stages by authorized roles. When a site or claim is approved, the ID provided in the endpoint is a direct reference to the state tracked by the system, ensuring that all actions are aligned with the entity's current status. This allows for a streamlined, traceable, and consistent approval process, simplifying the integration of various lifecycle stages within the policy framework."
		},
		{
			"name": "state",
			"description": "The state tag facilitates a focused overview of a policy's lifecycle, tailored to the roles interacting with it. By segmenting access to lifecycle stages, the tag ensures that suppliers, verifiers, and other stakeholders can securely access only the data relevant to their function. This role-based access empowers stakeholders to make informed decisions and take appropriate actions within the policy workflow. It simplifies the complex ecosystem, providing a clear path through the policy's progress while upholding the integrity of the trust chain. Use role-specific endpoints like /policies/{policyId}/state/{entityState} to seamlessly navigate and manage the states pertinent to your role in the workflow."
		}
	],
	"paths": {
		"/accounts": {
			"post": {
				"tags": ["accounts"],
				"summary": "Creates a new account",
				"security": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Credentials"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string",
									"example": "application/json; charset=utf-8"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Account"
								}
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					}
				}
			}
		},
		"/accounts/login": {
			"post": {
				"tags": ["accounts"],
				"summary": "Log in an account",
				"security": [],
				"operationId": "login",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Credentials"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string",
									"example": "application/json; charset=utf-8"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Account"
								}
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					}
				}
			}
		},
		"/policies/{policyId}/role/{roleType}": {
			"post": {
				"tags": ["policies"],
				"summary": "The standard registry to assign an account to a policy with a given role",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "roleType",
						"in": "path",
						"schema": {
							"type": "string",
							"enum": ["supplier", "verifier"]
						},
						"required": true,
						"example": "registrant"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:03 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					}
				}
			}
		},
		"/policies/{policyId}/projects": {
			"post": {
				"tags": ["policies"],
				"summary": "A Supplier can register a new ecological project, this is considered the 'root' level definition",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EcologicalProject"
							}
						}
					}
				},
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"401": {
						"$ref": "#/components/responses/401"
					}
				}
			}
		},
		"/policies/{policyId}/projects/{id}/sites": {
			"post": {
				"tags": ["policies"],
				"summary": "A supplier can register a new site that is connected to an approved project for a policy",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProjectRegistration"
							}
						}
					}
				},
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					}
				}
			}
		},
		"/policies/{policyId}/sites/{id}/claims": {
			"post": {
				"tags": ["policies"],
				"summary": "A supplier can submit a new claim with MRV data points as evidence to prove alignment to a methodology.",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MeasurementReportingVerification"
							}
						}
					}
				},
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "mrv_type",
						"in": "path",
						"schema": {
							"enum": [
								"agrecalc",
								"cool-farm-tool",
								"general-supply-documentation"
							]
						},
						"required": true,
						"example": "agrecalc"
					},
					{
						"name": "id",
						"in": "path",
						"required": true,
						"example": "6543d0149494a2ae74af310a"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"401": {
						"$ref": "#/components/responses/401"
					}
				}
			}
		},
		"/policies/{policyId}/sites/{id}/claim/{mrv_type}": {
			"post": {
				"tags": ["policies"],
				"description": "to be deprecated.",
				"summary": "[DEPRECATED] A supplier can submit a new claim with MRV data points as evidence to prove alignment to a methodology.",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MeasurementReportingVerification"
							}
						}
					}
				},
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "mrv_type",
						"in": "path",
						"schema": {
							"enum": [
								"agrecalc",
								"cool-farm-tool",
								"general-supply-documentation"
							]
						},
						"required": true,
						"example": "agrecalc"
					},
					{
						"name": "id",
						"in": "path",
						"required": true,
						"example": "6543d0149494a2ae74af310a"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"401": {
						"$ref": "#/components/responses/401"
					}
				}
			}
		},
		"/policies/{policyId}/token": {
			"get": {
				"tags": ["policies"],
				"summary": "Get the token id connected to a policy",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"401": {
						"$ref": "#/components/responses/401"
					}
				}
			}
		},
		"/policies/{policyId}/trustchains": {
			"get": {
				"tags": ["policies"],
				"summary": "Fetches all the trust chains for a policy",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrustChains"
								},
								"example": {
									"data": [
										{
											"hash": "FR35TKVXtwnGvPWzQd1DS46tqc6Up9B5QvQBH4UzBrk3",
											"tokenId": "0.0.47858839",
											"mintDate": "2022-08-18T16:27:25.645Z",
											"mintAmount": "0.3000",
											"topicId": "0.0.47858844",
											"issuer": {
												"did": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784",
												"username": "ci_registrant_2022-08-18T16:25:41.029Z"
											},
											"createDate": "2022-08-18T16:27:39.215Z",
											"updateDate": "2022-08-18T16:27:39.215Z",
											"messageId": "1660840060.001426846",
											"proof": {
												"type": "Ed25519Signature2018",
												"created": "2022-08-18T16:27:25Z",
												"verificationMethod": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041#did-root-key",
												"proofPurpose": "authentication",
												"challenge": "123",
												"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..unyaGp6RH6MADEMkkm-hBih4houAt2epNfD8qoSPWOWi3cyUyuR3KTiWtwWY1L6XMI6faGHv4mf-W-BTKVRdCw"
											},
											"policy": {
												"id": "62f238427fe3fa7b888e846f",
												"name": "dovu_ccp_mrv_cool_farm_tool_alpha",
												"description": "",
												"version": "1.0.0",
												"issuer": {
													"did": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041",
													"username": "dovuauthority"
												},
												"createDate": "2022-08-09T10:34:42.351Z",
												"updateDate": "2022-08-09T10:34:42.351Z"
											},
											"trustChain": [
												{
													"title": "Carbon Offset Token",
													"description": "Token[s] minted.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041",
														"username": "dovuauthority"
													},
													"messageId": "1660840054.895120003",
													"issuanceDate": "2022-08-18T16:27:25.647Z",
													"createDate": "2022-08-18T16:27:34.332Z",
													"updateDate": "2022-08-18T16:27:34.332Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:27:25Z",
														"verificationMethod": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bNNjnjhR83T4K8OnEc8eYsJAOhUQVDmthKsjcRTE4vetx-92dUz39byz8qtFQkyp3Swzca0ODm8gJrjr_Wz7CQ"
													},
													"type": "mint"
												},
												{
													"title": "Cool Farm Tool MRV Submission Review",
													"description": "Cool Farm Tool  Submission processed.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:2nhyskNTBLEA7EhFQu8bBJGzs1t42RpsGtdiVRfsxz9T;hedera:testnet:tid=0.0.47929788",
														"username": "ci_verifier_2022-08-18T16:25:41.029Z"
													},
													"messageId": null,
													"issuanceDate": "2022-08-18T16:27:25.529Z",
													"createDate": "2022-08-18T16:27:25.604Z",
													"updateDate": "2022-08-18T16:27:25.604Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:27:25Z",
														"verificationMethod": "did:hedera:testnet:2nhyskNTBLEA7EhFQu8bBJGzs1t42RpsGtdiVRfsxz9T;hedera:testnet:tid=0.0.47929788#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..LTz5nO_3mq7fXiMKsFrE6UfNDrc7J9gLKVvKXsOvruljWbuVzaUdB0eIvxFs5_K5YZRWzNITvPJ_3zHjtr2pAw"
													},
													"type": "issue_request(Approved)"
												},
												{
													"title": "Cool Farm Tool Documentation Request",
													"description": "Registrant submitted Cool Farm Tool Documentation to Issuer.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784",
														"username": "ci_registrant_2022-08-18T16:25:41.029Z"
													},
													"messageId": null,
													"issuanceDate": "2022-08-18T16:27:15.135Z",
													"createDate": "2022-08-18T16:27:15.176Z",
													"updateDate": "2022-08-18T16:27:15.176Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:27:15Z",
														"verificationMethod": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2b-SxSFuLbRPEAtJpqWkZzwFGypcxkw48YY5Sf0vVnnK06ZcP5fMzUxozXpM1YsTUUZdv3fisCN2-89srCHLDA"
													},
													"type": "issue_request"
												},
												{
													"title": "Ecological Project Review",
													"description": "Ecological Project registration request processed.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041",
														"username": "dovuauthority"
													},
													"messageId": null,
													"issuanceDate": "2022-08-18T16:27:04.791Z",
													"createDate": "2022-08-18T16:27:04.804Z",
													"updateDate": "2022-08-18T16:27:04.804Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:27:04Z",
														"verificationMethod": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Y0OP-wW8BAup3JmlGIrm8eZBN2OuWzUlFR5F9Um2NsjvC3mI5vzKT1rBK5w0b_BR8WlGSb1rDCwycMdDqSuAQ"
													},
													"type": "farm(Approved)"
												},
												{
													"title": "Ecological Project Registration",
													"description": "Ecological Project registration request submitted to Issuer.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784",
														"username": "ci_registrant_2022-08-18T16:25:41.029Z"
													},
													"messageId": null,
													"issuanceDate": "2022-08-18T16:26:54.426Z",
													"createDate": "2022-08-18T16:26:54.445Z",
													"updateDate": "2022-08-18T16:26:54.445Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:26:54Z",
														"verificationMethod": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5q_We6qnhlVrfEg8YDZQAUoryzdrRMSBmgojv0HIUeXrtF5w4XPRQMzm2lFa9MiqJo0dpYNQpkWDk_ANfDI_DA"
													},
													"type": "farm"
												},
												{
													"title": "Initial Application Review",
													"description": "DOVU project initial application processed.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041",
														"username": "dovuauthority"
													},
													"messageId": null,
													"issuanceDate": "2022-08-18T16:26:42.927Z",
													"createDate": "2022-08-18T16:26:42.961Z",
													"updateDate": "2022-08-18T16:26:42.961Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:26:42Z",
														"verificationMethod": "did:hedera:testnet:HJsroiv4k6ggwnyXWUEokcopxRaeehAPUJhp63zjd6Zx;hedera:testnet:tid=0.0.47650041#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJA7l1WCpeVf6qAN0_8vX_hCOTmt274fENN-E0jc6kmOYGON1EoR5wfwhLnU3vnvWyPHL8W90VbJuDssHrXiCQ"
													},
													"type": "registrant(Approved)"
												},
												{
													"title": "DOVU Project Initial Application",
													"description": "Application submitted to Issuer.",
													"visible": true,
													"issuer": {
														"did": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784",
														"username": "ci_registrant_2022-08-18T16:25:41.029Z"
													},
													"messageId": null,
													"issuanceDate": "2022-08-18T16:26:27.986Z",
													"createDate": "2022-08-18T16:26:28.044Z",
													"updateDate": "2022-08-18T16:26:28.044Z",
													"proof": {
														"type": "Ed25519Signature2018",
														"created": "2022-08-18T16:26:28Z",
														"verificationMethod": "did:hedera:testnet:8jUQXcED8fpRsS8EhhyEmHABPKDnaCZn9YfYmn79qZB5;hedera:testnet:tid=0.0.47929784#did-root-key",
														"proofPurpose": "assertionMethod",
														"jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..fy8HstPV5Lx5d4dH964TSX1f91_PKLzOwMO5gSqf46DcWimdak2B79LFSrm7_ufZBufpLpafI_P7yrbFrzm_Cg"
													},
													"type": "registrant"
												}
											]
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/policies/{policyId}/approval/projects/{id}": {
			"put": {
				"tags": ["approval"],
				"summary": "A standard registry can approve a new supplier created project with all details.",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "id",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "6543d0149494a2ae74af310a"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/approval/sites/{id}": {
			"put": {
				"tags": ["approval"],
				"summary": "A standard registry can approve a site that is connected to an approved project for a supplier",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "did",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "did:hedera:testnet:DNenc37ybL93AmGhEhNrujUvLGQ2cC93JcZgFXVt5iYE;hedera:testnet:tid=0.0.47859693"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/approval/claims/{id}": {
			"put": {
				"tags": ["approval"],
				"summary": " A verifier can approve a claim (MRV) submission connected to a particular site for a project, the registry cannot approve a claim.",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "did",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "did:hedera:testnet:DNenc37ybL93AmGhEhNrujUvLGQ2cC93JcZgFXVt5iYE;hedera:testnet:tid=0.0.47859693"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/state/projects": {
			"get": {
				"tags": ["state"],
				"summary": "Allow the standard registry to get the current status of any, and all projects that have been submitted to a DOVU standard policy",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "status",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "approved"
					},
					{
						"name": "filter0",
						"description": "One or more specific fields that refer to the previous/current document submission for the trustchain",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/state/approve-site": {
			"get": {
				"tags": ["state"],
				"summary": "Allow the standard registry to get the current projects to connect to a related site to be approved.",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "status",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "approved"
					},
					{
						"name": "filter0",
						"description": "One or more specific fields that refer to the previous/current document submission for the trustchain",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/state/create-site": {
			"get": {
				"tags": ["state"],
				"summary": "Allow the supplier role to get access to all projects before the create site submission process, to connect a project to a brand-new site.",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "status",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "approved"
					},
					{
						"name": "filter0",
						"description": "One or more specific fields that refer to the previous/current document submission for the trustchain",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/state/create-claim": {
			"get": {
				"tags": ["state"],
				"summary": "Allow the Supplier role to get access to all sites that have been approved before creating a new claim to formulate the flow between a project, site, and a (MRV) claim.",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "status",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "approved"
					},
					{
						"name": "filter0",
						"description": "One or more specific fields that refer to the previous/current document submission for the trustchain",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		},
		"/policies/{policyId}/state/approve-claim": {
			"get": {
				"tags": ["state"],
				"summary": "Allow the verfier Role in the system, the ability to check all of the claims that have been submitted through a supplier to approve before the minting of new digitial ecological tokens.",
				"parameters": [
					{
						"name": "policyId",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "62d98142a8075c6027dfcf90"
					},
					{
						"name": "status",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "approved"
					},
					{
						"name": "filter0",
						"description": "One or more specific fields that refer to the previous/current document submission for the trustchain",
						"in": "path",
						"schema": {
							"type": "string"
						},
						"required": true,
						"example": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"headers": {
							"Date": {
								"schema": {
									"type": "string",
									"example": "Mon, 25 Jul 2022 16:08:13 GMT"
								}
							},
							"Connection": {
								"schema": {
									"type": "string",
									"example": "keep-alive"
								}
							},
							"Keep-Alive": {
								"schema": {
									"type": "string",
									"example": "timeout=5"
								}
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string",
									"example": "chunked"
								}
							}
						},
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								},
								"example": null
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/401"
					},
					"422": {
						"$ref": "#/components/responses/422"
					},
					"404": {
						"$ref": "#/components/responses/404"
					}
				}
			}
		}

	}
}
